#compdef git-annex
#description:managing files while ignoring their content

local state line context
local -A opt_args

local -a arguments
arguments=(
    '--debug'
    '--exclude=glob'
    '--backend=name'
    '-c name=value'
    '--force[force something]'
    '--from=repository'
    '--fast[don'\''t be slow]'
    '--json'
    '--key=name'
    '--numcopies=n'
    '--to=repository'
    '--semitrust=repository'
    '--trust=repository'
    '--untrust=repository'
    '--verbose[tell me more]'
    '--quiet'
    ': :->command'
    '*:: :->subcmd'
)

_arguments -C $arguments

case $state in
(command)
    local -a cmds
    cmds=(
        add:'adds files in the path to the annex'
        addurl:
        copy:
        drop:'drops the content of annexed files from this repository'
        dropkey:
        dropunused:
        describe:'changes the description of a repository'
        edit:
        find:
        fix:
        fromkey:
        fsck:
        get:'makes  the  content of annexed files available in this repository'
        init:
        initremote:
        lock:
        map:'generate a visual map of repositories'
        merge:
        migrate:
        move:'move files from/to repositories'
        pre-commit:
        semitrust:
        status:'displays some statistics and other information'
        setkey:
        trust:
        unannex:
        uninit:
        unlock:
        untrust:
        unused:
        upgrade:
        version:
        whereis:
    )
    _describe -t commands command cmds
    ;;
(subcmd)
    case ${line[1]} in
    (map|status)
        _message 'No more arguments'
        ;;
    (*)
        _path_files
        ;;
    esac
    ;;
esac

